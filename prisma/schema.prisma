generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id           Int       @id @default(autoincrement())
  nombre       String
  correo       String    @unique
  password     String    @map("contrase√±a")
  rol          Rol?
  creado_en    DateTime? @default(now()) @db.Timestamp(0)
  carrito      carrito[]
  ordenes      ordenes[]
  validaciones ordenes[] @relation("validaciones")
}

model categorias {
  id        Int         @id @default(autoincrement())
  nombre    String
  productos productos[]
}

model colores {
  id           Int             @id @default(autoincrement())
  nombre       String
  codigo_hex   String
  carrito      carrito[]
  ordenDetalle orden_detalle[]
  stock        stock_detalle[]
}

model productos {
  id           Int                   @id @default(autoincrement())
  sku          String
  nombre       String
  descripcion  String
  url_imagen   String?
  categoria_id Int
  featured     Boolean               @default(false)
  carrito      carrito[]
  imagenes     imagenes_producto[]
  ordenDetalle orden_detalle[]
  categoria    categorias            @relation(fields: [categoria_id], references: [id])
  destacado    productos_destacados?
  stock        stock_detalle[]

  @@index([categoria_id], map: "productos_categoria_id_fkey")
}

model imagenes_producto {
  id          Int       @id @default(autoincrement())
  producto_id Int
  url_imagen  String
  producto    productos @relation(fields: [producto_id], references: [id])

  @@index([producto_id], map: "imagenes_producto_producto_id_fkey")
}

model stock_detalle {
  id          Int       @id @default(autoincrement())
  producto_id Int
  color_id    Int
  cantidad    Int
  precio      Float
  color       colores   @relation(fields: [color_id], references: [id])
  producto    productos @relation(fields: [producto_id], references: [id])

  @@index([color_id], map: "stock_detalle_color_id_fkey")
  @@index([producto_id], map: "stock_detalle_producto_id_fkey")
}

model carrito {
  id          Int       @id @default(autoincrement())
  usuario_id  Int
  producto_id Int
  color_id    Int
  cantidad    Int
  color       colores   @relation(fields: [color_id], references: [id])
  producto    productos @relation(fields: [producto_id], references: [id])
  usuario     usuarios  @relation(fields: [usuario_id], references: [id])

  @@index([color_id], map: "carrito_color_id_fkey")
  @@index([producto_id], map: "carrito_producto_id_fkey")
  @@index([usuario_id], map: "carrito_usuario_id_fkey")
}

model ordenes {
  id                             Int             @id @default(autoincrement())
  usuario_id                     Int?
  fecha                          DateTime        @default(now())
  total                          Float
  estado                         String
  codigo_orden                   String          @unique
  nombre_cliente                 String?
  email_cliente                  String?
  telefono_cliente               String?
  direccion_cliente              String?         @db.Text
  municipio_cliente              String?
  codigo_postal_cliente          String?
  nit_cliente                    String?         @db.VarChar(20)
  nombre_quien_recibe            String?
  subtotal                       Float
  costo_envio                    Float
  comprobante_transferencia      String?
  fecha_validacion_transferencia DateTime?
  validado_por                   Int?
  notas                          String?         @db.Text
  metodo_pago                    String
  detalle                        orden_detalle[]
  usuario                        usuarios?       @relation(fields: [usuario_id], references: [id], onDelete: Restrict)
  validador                      usuarios?       @relation("validaciones", fields: [validado_por], references: [id])

  @@index([usuario_id], map: "ordenes_usuario_id_fkey")
  @@index([validado_por], map: "ordenes_validado_por_fkey")
}

model orden_detalle {
  id              Int       @id @default(autoincrement())
  orden_id        Int
  producto_id     Int
  color_id        Int
  cantidad        Int
  precio_unitario Float
  color           colores   @relation(fields: [color_id], references: [id])
  orden           ordenes   @relation(fields: [orden_id], references: [id])
  producto        productos @relation(fields: [producto_id], references: [id])

  @@index([color_id], map: "orden_detalle_color_id_fkey")
  @@index([orden_id], map: "orden_detalle_orden_id_fkey")
  @@index([producto_id], map: "orden_detalle_producto_id_fkey")
}

model productos_destacados {
  id           Int       @id @default(autoincrement())
  producto_id  Int       @unique
  orden        Int       @default(0)
  fecha_inicio DateTime  @default(now())
  fecha_fin    DateTime?
  activo       Boolean   @default(true)
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  producto     productos @relation(fields: [producto_id], references: [id], onDelete: Cascade)
}

model mensajes_contacto {
  id              Int       @id @default(autoincrement())
  nombre          String
  email           String
  asunto          String
  mensaje         String    @db.Text
  leido           Boolean   @default(false)
  creado_en       DateTime  @default(now())
  respondido      Boolean   @default(false)
  respuesta       String?   @db.Text
  fecha_respuesta DateTime?
}

model hero_images {
  id                  Int      @id @default(autoincrement())
  titulo              String
  subtitulo           String?  @db.Text
  url_imagen          String
  cloudinary_id       String?
  orden               Int      @default(0)
  activo              Boolean  @default(true)
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime
}

model promo_banners {
  id                  Int      @id @default(autoincrement())
  titulo              String
  descripcion         String?  @db.Text
  url_imagen          String
  cloudinary_id       String?
  enlace              String?
  orden               Int      @default(0)
  activo              Boolean  @default(true)
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime
}

enum Rol {
  cliente
  admin
}
